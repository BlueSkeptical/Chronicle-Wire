*** The message content looks like this

Test twireUTF used 90 bytes.
--- !!data
price: 1234
flag: true
text: Hello World
side: Sell
smallInt: 123
longInt: 1234567890

Test twire8bit used 90 bytes.
--- !!data
price: 1234
flag: true
text: Hello World
side: Sell
smallInt: 123
longInt: 1234567890

Test bwireFFF used 69 bytes.
--- !!data #binary
price: 1234
flag: true
text: Hello World
side: Sell
smallInt: 123
longInt: 1234567890

Test bwireTFF used 83 bytes.
--- !!data #binary
price: 1234
flag: true
text: Hello World
side: Sell
smallInt: 123
longInt: 1234567890

Test bwireFTF used 43 bytes.
--- !!data #binary
3: 1234
4: true
5: Hello World
6: Sell
1: 123
2: 1234567890

Test bwireTTF used 57 bytes.
--- !!data #binary
3: 1234
4: true
5: Hello World
6: Sell
1: 123
2: 1234567890

Test bwireFTT used 31 bytes.
--- !!data #binary
1234
true
Hello World
Sell
123
1234567890

Test rwireUTF used 42 bytes.
00000000 26 00 00 00 00 00 00 00  00 48 93 40 B1 0B 48 65 &······· ·H·@··He
00000010 6C 6C 6F 20 57 6F 72 6C  64 04 53 65 6C 6C 7B 00 llo Worl d·Sell{·
00000020 00 00 D2 02 96 49 00 00  00 00                   ·····I·· ··

Test rwire8bit used 42 bytes.
00000000 26 00 00 00 00 00 00 00  00 48 93 40 B1 0B 48 65 &······· ·H·@··He
00000010 6C 6C 6F 20 57 6F 72 6C  64 04 53 65 6C 6C 7B 00 llo Worl d·Sell{·
00000020 00 00 D2 02 96 49 00 00  00 00

*** The Benchamrk results for a long run look like this.

measurementTime: 30 secs
# JMH 1.10.3 (released 25 days ago)
# VM version: JDK 1.8.0_45, VM 25.45-b02
# VM invoker: /opt/jdk1.8.0_45/jre/bin/java
# VM options: -verbose:gc -Xmx1g -XX:MaxBCEAEstimateSize=350 -DXX:MaxInlineSize=999 -DlongTest=true -Didea.launcher.port=7533 -Didea.launcher.bin.path=/opt/idea-IU-142.3371.3/bin -Dfile.encoding=UTF-8
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 30 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Sampling time
# Benchmark: net.openhft.chronicle.wire.benchmarks.Main.bwireFFF

# Run progress: 0.00% complete, ETA 01:43:20
# Fork: 1 of 1
# Warmup Iteration   1: n = 18045, mean = 30360 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1478, 2460, 4052, 6352, 42083, 9477095, 34550265, 39190528 ns/op
# Warmup Iteration   2: n = 20176, mean = 8135 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1382, 1398, 1858, 2292, 2544, 6273, 27913693, 39387136 ns/op
# Warmup Iteration   3: n = 22942, mean = 1406 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1388, 1402, 1410, 1412, 1432, 1769, 7174, 8112 ns/op
# Warmup Iteration   4: n = 11561, mean = 1408 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1386, 1402, 1412, 1420, 1457, 1944, 12070, 12912 ns/op
# Warmup Iteration   5: n = 11744, mean = 1409 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1388, 1404, 1418, 1418, 1429, 1703, 5350, 5696 ns/op
# Warmup Iteration   6: n = 11749, mean = 1408 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1388, 1404, 1418, 1418, 1463, 1633, 6494, 7160 ns/op
# Warmup Iteration   7: n = 11751, mean = 1408 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1360, 1404, 1418, 1418, 1432, 1611, 3259, 3284 ns/op
# Warmup Iteration   8: n = 11753, mean = 1412 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1388, 1404, 1418, 1418, 1432, 1814, 28241, 32768 ns/op
# Warmup Iteration   9: n = 11750, mean = 1408 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1388, 1404, 1418, 1420, 1434, 1630, 4917, 5208 ns/op
# Warmup Iteration  10: n = 11750, mean = 1409 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1382, 1402, 1418, 1420, 1440, 1692, 4660, 4888 ns/op
# Warmup Iteration  11: n = 11750, mean = 1408 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1388, 1402, 1418, 1420, 1440, 1709, 3432, 3436 ns/op
# Warmup Iteration  12: n = 11750, mean = 1408 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1282, 1402, 1418, 1420, 1448, 1671, 3501, 3532 ns/op
# Warmup Iteration  13: n = 11749, mean = 1408 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1388, 1402, 1418, 1420, 1432, 1631, 3580, 3600 ns/op
# Warmup Iteration  14: n = 11751, mean = 1408 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1372, 1402, 1418, 1420, 1430, 1612, 6456, 7128 ns/op
# Warmup Iteration  15: n = 11751, mean = 1408 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1370, 1402, 1418, 1420, 1432, 1684, 3527, 3556 ns/op
# Warmup Iteration  16: n = 11752, mean = 1408 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1388, 1402, 1418, 1420, 1431, 1596, 4483, 4664 ns/op
# Warmup Iteration  17: n = 11768, mean = 1411 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1386, 1410, 1422, 1422, 1428, 1579, 8004, 9024 ns/op
# Warmup Iteration  18: n = 11769, mean = 1412 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1384, 1412, 1422, 1422, 1428, 1651, 5958, 6536 ns/op
# Warmup Iteration  19: n = 11767, mean = 1412 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1372, 1410, 1422, 1422, 1455, 1676, 6741, 6848 ns/op
# Warmup Iteration  20: n = 11768, mean = 1411 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1386, 1408, 1422, 1422, 1426, 1604, 3416, 3432 ns/op
Iteration   1: n = 351531, mean = 1411 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1278, 1410, 1422, 1422, 1426, 1638, 3741, 14112 ns/op
Iteration   2: n = 352877, mean = 1412 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1360, 1410, 1422, 1422, 1452, 1654, 3698, 10912 ns/op
Iteration   3: n = 352950, mean = 1412 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1252, 1410, 1422, 1422, 1462, 1658, 3688, 11056 ns/op
Iteration   4: n = 352977, mean = 1412 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1348, 1410, 1422, 1422, 1436, 1626, 3608, 12784 ns/op
Iteration   5: n = 352565, mean = 1408 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1368, 1402, 1422, 1424, 1426, 1604, 3574, 8848 ns/op
Iteration   6: n = 353141, mean = 1411 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1372, 1410, 1422, 1422, 1424, 1484, 3461, 7368 ns/op
Iteration   7: n = 353290, mean = 1411 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1316, 1410, 1422, 1422, 1424, 1479, 3439, 8024 ns/op
Iteration   8: n = 353281, mean = 1410 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1370, 1408, 1422, 1422, 1424, 1480, 3471, 8192 ns/op
Iteration   9: n = 353289, mean = 1411 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1382, 1410, 1422, 1422, 1424, 1488, 3483, 10048 ns/op
Iteration  10: n = 353284, mean = 1410 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1360, 1410, 1422, 1422, 1424, 1482, 3451, 8240 ns/op
Iteration  11: n = 352844, mean = 1411 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1282, 1412, 1422, 1422, 1424, 1480, 3548, 10976 ns/op
Iteration  12: n = 353290, mean = 1410 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1346, 1410, 1422, 1422, 1424, 1478, 3417, 7552 ns/op
Iteration  13: n = 353285, mean = 1410 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1378, 1410, 1422, 1422, 1424, 1480, 3387, 7240 ns/op
Iteration  14: n = 353284, mean = 1411 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1372, 1410, 1422, 1422, 1424, 1492, 3492, 8208 ns/op
Iteration  15: n = 353294, mean = 1411 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1352, 1410, 1422, 1422, 1424, 1482, 3393, 7232 ns/op
Iteration  16: n = 353196, mean = 1411 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1374, 1410, 1422, 1422, 1424, 1478, 3523, 7928 ns/op
Iteration  17: n = 353290, mean = 1411 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1362, 1410, 1422, 1422, 1424, 1480, 3484, 7688 ns/op
Iteration  18: n = 353246, mean = 1411 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1364, 1410, 1422, 1422, 1424, 1534, 3475, 13024 ns/op
Iteration  19: n = 353391, mean = 1410 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1372, 1408, 1422, 1422, 1424, 1480, 3528, 7632 ns/op
Iteration  20: n = 353291, mean = 1411 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1310, 1410, 1422, 1422, 1424, 1480, 3397, 8096 ns/op


Result "bwireFFF":
  1410.683 ±(99.9%) 0.063 ns/op [Average]
  (min, avg, max) = (1252.000, 1410.683, 14112.000), stdev = 50.537
  CI (99.9%): [1410.621, 1410.746] (assumes normal distribution)
  Samples, N = 7061596
        mean =   1410.683 ±(99.9%) 0.063 ns/op
         min =   1252.000 ns/op
  p( 0.0000) =   1252.000 ns/op
  p(50.0000) =   1410.000 ns/op
  p(90.0000) =   1422.000 ns/op
  p(95.0000) =   1422.000 ns/op
  p(99.0000) =   1424.000 ns/op
  p(99.9000) =   1552.000 ns/op
  p(99.9900) =   3495.361 ns/op
  p(99.9990) =   6995.072 ns/op
  p(99.9999) =  10734.260 ns/op
         max =  14112.000 ns/op


# JMH 1.10.3 (released 25 days ago)
# VM version: JDK 1.8.0_45, VM 25.45-b02
# VM invoker: /opt/jdk1.8.0_45/jre/bin/java
# VM options: -verbose:gc -Xmx1g -XX:MaxBCEAEstimateSize=350 -DXX:MaxInlineSize=999 -DlongTest=true -Didea.launcher.port=7533 -Didea.launcher.bin.path=/opt/idea-IU-142.3371.3/bin -Dfile.encoding=UTF-8
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 30 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Sampling time
# Benchmark: net.openhft.chronicle.wire.benchmarks.Main.bwireFTF

# Run progress: 10.00% complete, ETA 01:33:11
# Fork: 1 of 1
# Warmup Iteration   1: n = 22368, mean = 21028 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 550, 929, 2128, 3857, 30570, 3116650, 40544276, 51970048 ns/op
# Warmup Iteration   2: n = 30037, mean = 540 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 523, 537, 545, 546, 559, 756, 2704, 3504 ns/op
# Warmup Iteration   3: n = 13878, mean = 587 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 573, 587, 591, 595, 603, 654, 3405, 4044 ns/op
# Warmup Iteration   4: n = 13766, mean = 587 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 574, 588, 591, 596, 607, 626, 2394, 2480 ns/op
# Warmup Iteration   5: n = 13987, mean = 587 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 574, 588, 591, 595, 607, 648, 1733, 2320 ns/op
# Warmup Iteration   6: n = 13998, mean = 587 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 574, 588, 591, 595, 604, 642, 2685, 2824 ns/op
# Warmup Iteration   7: n = 14006, mean = 588 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 561, 589, 592, 595, 599, 642, 4489, 5744 ns/op
# Warmup Iteration   8: n = 13880, mean = 588 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 574, 588, 591, 595, 608, 627, 2416, 2508 ns/op
# Warmup Iteration   9: n = 13997, mean = 587 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 574, 588, 591, 594, 604, 625, 1801, 2468 ns/op
# Warmup Iteration  10: n = 13992, mean = 587 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 552, 588, 591, 596, 608, 620, 1711, 2368 ns/op
# Warmup Iteration  11: n = 12736, mean = 589 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 573, 589, 597, 603, 612, 655, 5532, 6712 ns/op
# Warmup Iteration  12: n = 14001, mean = 587 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 574, 588, 591, 595, 608, 621, 734, 741 ns/op
# Warmup Iteration  13: n = 13993, mean = 588 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 574, 588, 591, 595, 607, 639, 4493, 5832 ns/op
# Warmup Iteration  14: n = 13997, mean = 587 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 574, 588, 591, 592, 600, 641, 2566, 2572 ns/op
# Warmup Iteration  15: n = 13983, mean = 590 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 573, 589, 603, 604, 612, 617, 2488, 2576 ns/op
# Warmup Iteration  16: n = 13852, mean = 587 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 574, 587, 592, 593, 603, 625, 2546, 2592 ns/op
# Warmup Iteration  17: n = 13857, mean = 587 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 573, 588, 592, 593, 605, 648, 2589, 2736 ns/op
# Warmup Iteration  18: n = 13980, mean = 589 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 573, 587, 602, 603, 610, 619, 2799, 3004 ns/op
# Warmup Iteration  19: n = 13977, mean = 589 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 573, 587, 602, 603, 610, 641, 4875, 6600 ns/op
# Warmup Iteration  20: n = 13977, mean = 589 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 573, 587, 602, 603, 610, 620, 907, 910 ns/op
Iteration   1: n = 419398, mean = 589 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 524, 588, 602, 603, 612, 621, 2265, 5520 ns/op
Iteration   2: n = 415715, mean = 587 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 506, 588, 592, 593, 606, 620, 2379, 6472 ns/op
Iteration   3: n = 419234, mean = 589 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 496, 588, 603, 605, 612, 617, 2361, 6904 ns/op
Iteration   4: n = 419333, mean = 588 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 518, 587, 602, 603, 611, 620, 2364, 6744 ns/op
Iteration   5: n = 418997, mean = 589 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 525, 588, 602, 603, 610, 620, 2344, 6832 ns/op
Iteration   6: n = 415852, mean = 587 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 477, 588, 592, 595, 606, 620, 2289, 6016 ns/op
Iteration   7: n = 419297, mean = 589 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 551, 587, 602, 603, 610, 620, 2352, 6424 ns/op
Iteration   8: n = 417637, mean = 588 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 518, 588, 601, 602, 609, 620, 2328, 7280 ns/op
Iteration   9: n = 418537, mean = 589 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 555, 588, 603, 605, 612, 628, 2345, 6072 ns/op
Iteration  10: n = 419306, mean = 589 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 555, 587, 602, 603, 610, 620, 2321, 5784 ns/op
Iteration  11: n = 418665, mean = 589 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 520, 588, 602, 603, 610, 620, 2357, 5800 ns/op
Iteration  12: n = 416207, mean = 588 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 573, 588, 593, 602, 610, 629, 2336, 7432 ns/op
Iteration  13: n = 419304, mean = 589 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 573, 587, 602, 603, 610, 620, 2344, 7072 ns/op
Iteration  14: n = 419304, mean = 589 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 532, 587, 602, 603, 610, 620, 2356, 7296 ns/op
Iteration  15: n = 419275, mean = 589 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 573, 588, 602, 603, 610, 619, 2372, 6168 ns/op
Iteration  16: n = 419305, mean = 589 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 573, 587, 602, 603, 610, 620, 2372, 6280 ns/op
Iteration  17: n = 418351, mean = 588 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 557, 588, 601, 602, 610, 620, 2357, 5920 ns/op
Iteration  18: n = 418930, mean = 588 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 530, 587, 602, 602, 610, 619, 2316, 7280 ns/op
Iteration  19: n = 419307, mean = 589 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 563, 588, 602, 603, 610, 620, 2324, 6552 ns/op
Iteration  20: n = 417563, mean = 588 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 537, 588, 601, 602, 609, 620, 2372, 6104 ns/op


Result "bwireFTF":
  588.531 ±(99.9%) 0.034 ns/op [Average]
  (min, avg, max) = (477.000, 588.531, 7432.000), stdev = 30.117
  CI (99.9%): [588.497, 588.566] (assumes normal distribution)
  Samples, N = 8369517
        mean =    588.531 ±(99.9%) 0.034 ns/op
         min =    477.000 ns/op
  p( 0.0000) =    477.000 ns/op
  p(50.0000) =    588.000 ns/op
  p(90.0000) =    602.000 ns/op
  p(95.0000) =    603.000 ns/op
  p(99.0000) =    611.000 ns/op
  p(99.9000) =    620.000 ns/op
  p(99.9900) =   2340.000 ns/op
  p(99.9990) =   5356.877 ns/op
  p(99.9999) =   6720.351 ns/op
         max =   7432.000 ns/op


# JMH 1.10.3 (released 25 days ago)
# VM version: JDK 1.8.0_45, VM 25.45-b02
# VM invoker: /opt/jdk1.8.0_45/jre/bin/java
# VM options: -verbose:gc -Xmx1g -XX:MaxBCEAEstimateSize=350 -DXX:MaxInlineSize=999 -DlongTest=true -Didea.launcher.port=7533 -Didea.launcher.bin.path=/opt/idea-IU-142.3371.3/bin -Dfile.encoding=UTF-8
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 30 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Sampling time
# Benchmark: net.openhft.chronicle.wire.benchmarks.Main.bwireFTT

# Run progress: 20.00% complete, ETA 01:22:49
# Fork: 1 of 1
# Warmup Iteration   1: n = 24074, mean = 17473 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 528, 917, 2328, 2813, 26888, 3300045, 36988846, 49938432 ns/op
# Warmup Iteration   2: n = 28276, mean = 560 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 500, 540, 547, 551, 560, 3630, 11287, 212224 ns/op
# Warmup Iteration   3: n = 15212, mean = 544 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 526, 543, 550, 552, 558, 579, 2538, 2592 ns/op
# Warmup Iteration   4: n = 15111, mean = 543 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 525, 543, 550, 552, 555, 565, 630, 642 ns/op
# Warmup Iteration   5: n = 15106, mean = 543 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 524, 544, 550, 551, 555, 570, 2306, 2324 ns/op
# Warmup Iteration   6: n = 15111, mean = 544 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 526, 544, 550, 551, 555, 571, 2763, 2804 ns/op
# Warmup Iteration   7: n = 15106, mean = 544 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 530, 543, 551, 554, 558, 578, 2381, 2440 ns/op
# Warmup Iteration   8: n = 15233, mean = 543 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 528, 543, 551, 553, 556, 574, 2315, 2420 ns/op
# Warmup Iteration   9: n = 15235, mean = 543 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 528, 544, 550, 552, 555, 566, 1427, 2244 ns/op
# Warmup Iteration  10: n = 15234, mean = 543 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 529, 544, 550, 552, 555, 580, 781, 883 ns/op
# Warmup Iteration  11: n = 15236, mean = 544 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 525, 544, 551, 552, 555, 575, 3342, 4144 ns/op
# Warmup Iteration  12: n = 13815, mean = 543 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 525, 543, 549, 552, 556, 598, 1947, 2560 ns/op
# Warmup Iteration  13: n = 15233, mean = 544 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 523, 544, 550, 551, 555, 596, 3077, 3284 ns/op
# Warmup Iteration  14: n = 15233, mean = 544 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 527, 544, 551, 552, 555, 567, 2420, 2504 ns/op
# Warmup Iteration  15: n = 15225, mean = 542 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 527, 543, 549, 552, 556, 565, 1583, 2496 ns/op
# Warmup Iteration  16: n = 15236, mean = 546 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 526, 544, 551, 552, 555, 572, 16160, 30912 ns/op
# Warmup Iteration  17: n = 15251, mean = 542 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 529, 542, 548, 549, 552, 579, 2350, 2440 ns/op
# Warmup Iteration  18: n = 15254, mean = 542 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 528, 542, 548, 549, 552, 564, 2253, 2276 ns/op
# Warmup Iteration  19: n = 15249, mean = 543 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 530, 542, 548, 549, 552, 574, 2463, 2560 ns/op
# Warmup Iteration  20: n = 15261, mean = 542 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 524, 542, 548, 549, 552, 564, 2416, 2572 ns/op
Iteration   1: n = 457636, mean = 542 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 501, 542, 548, 549, 552, 564, 2296, 5560 ns/op
Iteration   2: n = 457752, mean = 542 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 506, 542, 548, 549, 552, 564, 2294, 7472 ns/op
Iteration   3: n = 456857, mean = 541 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 504, 542, 551, 552, 561, 574, 2361, 6272 ns/op
Iteration   4: n = 457501, mean = 542 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 517, 542, 548, 549, 552, 564, 2316, 5832 ns/op
Iteration   5: n = 456840, mean = 541 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 474, 542, 551, 552, 561, 574, 2316, 7728 ns/op
Iteration   6: n = 456839, mean = 541 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 515, 542, 551, 552, 561, 574, 2291, 5592 ns/op
Iteration   7: n = 457629, mean = 542 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 468, 542, 548, 549, 552, 579, 2302, 7008 ns/op
Iteration   8: n = 456833, mean = 541 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 476, 542, 551, 552, 561, 574, 2276, 6696 ns/op
Iteration   9: n = 457529, mean = 542 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 510, 542, 548, 549, 552, 564, 2230, 5520 ns/op
Iteration  10: n = 457500, mean = 542 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 456, 542, 548, 549, 552, 564, 2341, 7664 ns/op
Iteration  11: n = 457487, mean = 542 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 516, 542, 548, 549, 551, 564, 2243, 7032 ns/op
Iteration  12: n = 457703, mean = 542 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 518, 542, 548, 549, 552, 564, 2315, 10208 ns/op
Iteration  13: n = 456888, mean = 541 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 450, 542, 551, 552, 561, 574, 2273, 3312 ns/op
Iteration  14: n = 458413, mean = 542 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 507, 543, 549, 550, 551, 558, 2257, 6752 ns/op
Iteration  15: n = 457691, mean = 542 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 523, 542, 548, 549, 552, 564, 2266, 6664 ns/op
Iteration  16: n = 457769, mean = 542 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 515, 542, 548, 549, 552, 564, 2280, 7672 ns/op
Iteration  17: n = 457679, mean = 542 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 514, 542, 548, 549, 552, 564, 2289, 6968 ns/op
Iteration  18: n = 457612, mean = 542 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 522, 542, 548, 549, 552, 564, 2305, 6496 ns/op
Iteration  19: n = 457550, mean = 542 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 510, 542, 548, 549, 552, 569, 2326, 5768 ns/op
Iteration  20: n = 456843, mean = 541 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 519, 542, 551, 552, 561, 574, 2307, 5912 ns/op


Result "bwireFTT":
  541.996 ±(99.9%) 0.031 ns/op [Average]
  (min, avg, max) = (450.000, 541.996, 10208.000), stdev = 28.587
  CI (99.9%): [541.965, 542.027] (assumes normal distribution)
  Samples, N = 9148551
        mean =    541.996 ±(99.9%) 0.031 ns/op
         min =    450.000 ns/op
  p( 0.0000) =    450.000 ns/op
  p(50.0000) =    542.000 ns/op
  p(90.0000) =    548.000 ns/op
  p(95.0000) =    549.000 ns/op
  p(99.0000) =    553.000 ns/op
  p(99.9000) =    571.000 ns/op
  p(99.9900) =   2292.000 ns/op
  p(99.9990) =   5152.000 ns/op
  p(99.9999) =   6953.739 ns/op
         max =  10208.000 ns/op


# JMH 1.10.3 (released 25 days ago)
# VM version: JDK 1.8.0_45, VM 25.45-b02
# VM invoker: /opt/jdk1.8.0_45/jre/bin/java
# VM options: -verbose:gc -Xmx1g -XX:MaxBCEAEstimateSize=350 -DXX:MaxInlineSize=999 -DlongTest=true -Didea.launcher.port=7533 -Didea.launcher.bin.path=/opt/idea-IU-142.3371.3/bin -Dfile.encoding=UTF-8
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 30 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Sampling time
# Benchmark: net.openhft.chronicle.wire.benchmarks.Main.bwireTFF

# Run progress: 30.00% complete, ETA 01:12:28
# Fork: 1 of 1
# Warmup Iteration   1: n = 18798, mean = 30892 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1344, 1974, 4056, 4808, 37313, 9070543, 52757463, 61407232 ns/op
# Warmup Iteration   2: n = 30955, mean = 2646 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1312, 1338, 1358, 1376, 1738, 2237, 71986, 23986176 ns/op
# Warmup Iteration   3: n = 23828, mean = 1336 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1312, 1332, 1340, 1342, 1346, 1466, 3774, 6672 ns/op
# Warmup Iteration   4: n = 11828, mean = 1336 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1272, 1332, 1340, 1344, 1346, 1462, 3667, 3744 ns/op
# Warmup Iteration   5: n = 11916, mean = 1338 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1322, 1336, 1344, 1346, 1356, 1384, 6432, 7080 ns/op
# Warmup Iteration   6: n = 11931, mean = 1335 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1322, 1332, 1340, 1342, 1354, 1453, 3162, 3164 ns/op
# Warmup Iteration   7: n = 11932, mean = 1335 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1324, 1332, 1340, 1342, 1352, 1462, 3481, 3500 ns/op
# Warmup Iteration   8: n = 11931, mean = 1335 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1322, 1332, 1340, 1342, 1354, 1376, 5545, 6040 ns/op
# Warmup Iteration   9: n = 11931, mean = 1336 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1322, 1332, 1340, 1342, 1354, 1421, 8818, 9376 ns/op
# Warmup Iteration  10: n = 11929, mean = 1346 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1324, 1332, 1340, 1342, 1354, 1401, 104973, 129280 ns/op
# Warmup Iteration  11: n = 11921, mean = 1338 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1324, 1336, 1346, 1346, 1356, 1392, 3617, 3656 ns/op
# Warmup Iteration  12: n = 11930, mean = 1335 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1322, 1332, 1340, 1342, 1354, 1454, 3350, 3356 ns/op
# Warmup Iteration  13: n = 11835, mean = 1335 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1322, 1332, 1340, 1342, 1354, 1378, 3253, 3272 ns/op
# Warmup Iteration  14: n = 11931, mean = 1335 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1320, 1332, 1340, 1342, 1354, 1416, 5946, 6520 ns/op
# Warmup Iteration  15: n = 11929, mean = 1336 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1322, 1332, 1340, 1344, 1358, 1410, 6407, 7088 ns/op
# Warmup Iteration  16: n = 11931, mean = 1335 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1302, 1332, 1340, 1342, 1354, 1396, 3146, 3156 ns/op
# Warmup Iteration  17: n = 11944, mean = 1336 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1320, 1334, 1342, 1344, 1356, 1414, 8120, 9216 ns/op
# Warmup Iteration  18: n = 11942, mean = 1336 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1320, 1332, 1342, 1344, 1352, 1390, 5840, 6360 ns/op
# Warmup Iteration  19: n = 11939, mean = 1336 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1320, 1332, 1342, 1348, 1360, 1433, 5413, 5880 ns/op
# Warmup Iteration  20: n = 11940, mean = 1336 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1320, 1334, 1344, 1350, 1360, 1417, 3223, 3228 ns/op
Iteration   1: n = 358178, mean = 1335 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1272, 1332, 1342, 1350, 1360, 1398, 3317, 7240 ns/op
Iteration   2: n = 358084, mean = 1336 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1278, 1332, 1342, 1350, 1360, 1396, 3296, 7424 ns/op
Iteration   3: n = 358303, mean = 1336 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1142, 1334, 1342, 1344, 1356, 1400, 3280, 10304 ns/op
Iteration   4: n = 358185, mean = 1336 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1284, 1332, 1342, 1350, 1360, 1398, 3341, 7848 ns/op
Iteration   5: n = 356915, mean = 1336 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1302, 1332, 1342, 1354, 1360, 1400, 3377, 8016 ns/op
Iteration   6: n = 358179, mean = 1336 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1308, 1332, 1342, 1354, 1360, 1400, 3400, 7704 ns/op
Iteration   7: n = 358179, mean = 1336 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1308, 1332, 1342, 1350, 1360, 1402, 3417, 7232 ns/op
Iteration   8: n = 358170, mean = 1335 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1130, 1332, 1342, 1350, 1360, 1406, 3298, 8208 ns/op
Iteration   9: n = 358181, mean = 1335 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1304, 1332, 1342, 1354, 1360, 1412, 3330, 20704 ns/op
Iteration  10: n = 358178, mean = 1336 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1280, 1332, 1342, 1350, 1360, 1396, 3358, 14304 ns/op
Iteration  11: n = 358178, mean = 1336 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1274, 1332, 1342, 1354, 1360, 1398, 3396, 7552 ns/op
Iteration  12: n = 358304, mean = 1335 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1186, 1334, 1342, 1344, 1356, 1400, 3418, 8400 ns/op
Iteration  13: n = 358180, mean = 1336 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1212, 1332, 1342, 1354, 1360, 1400, 3357, 8976 ns/op
Iteration  14: n = 358178, mean = 1336 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1318, 1332, 1342, 1354, 1360, 1400, 3390, 6568 ns/op
Iteration  15: n = 358179, mean = 1336 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1288, 1332, 1342, 1350, 1360, 1396, 3412, 14160 ns/op
Iteration  16: n = 358174, mean = 1336 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1268, 1332, 1342, 1354, 1360, 1400, 3341, 8144 ns/op
Iteration  17: n = 358297, mean = 1335 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1254, 1334, 1342, 1344, 1356, 1406, 3373, 8336 ns/op
Iteration  18: n = 358132, mean = 1336 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1204, 1334, 1344, 1350, 1360, 1406, 3348, 7544 ns/op
Iteration  19: n = 358173, mean = 1336 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1294, 1332, 1342, 1354, 1360, 1402, 3321, 7872 ns/op
Iteration  20: n = 358172, mean = 1335 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1298, 1332, 1342, 1350, 1360, 1412, 3289, 12000 ns/op


Result "bwireTFF":
  1335.590 ±(99.9%) 0.058 ns/op [Average]
  (min, avg, max) = (1130.000, 1335.590, 20704.000), stdev = 47.544
  CI (99.9%): [1335.531, 1335.648] (assumes normal distribution)
  Samples, N = 7162519
        mean =   1335.590 ±(99.9%) 0.058 ns/op
         min =   1130.000 ns/op
  p( 0.0000) =   1130.000 ns/op
  p(50.0000) =   1332.000 ns/op
  p(90.0000) =   1342.000 ns/op
  p(95.0000) =   1348.000 ns/op
  p(99.0000) =   1360.000 ns/op
  p(99.9000) =   1400.000 ns/op
  p(99.9900) =   3348.000 ns/op
  p(99.9990) =   6610.998 ns/op
  p(99.9999) =   8949.997 ns/op
         max =  20704.000 ns/op


# JMH 1.10.3 (released 25 days ago)
[GC (Allocation Failure)  129024K->5591K(493056K), 0.0042993 secs]
# VM version: JDK 1.8.0_45, VM 25.45-b02
# VM invoker: /opt/jdk1.8.0_45/jre/bin/java
# VM options: -verbose:gc -Xmx1g -XX:MaxBCEAEstimateSize=350 -DXX:MaxInlineSize=999 -DlongTest=true -Didea.launcher.port=7533 -Didea.launcher.bin.path=/opt/idea-IU-142.3371.3/bin -Dfile.encoding=UTF-8
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 30 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Sampling time
# Benchmark: net.openhft.chronicle.wire.benchmarks.Main.bwireTTF

# Run progress: 40.00% complete, ETA 01:02:07
# Fork: 1 of 1
# Warmup Iteration   1: n = 35601, mean = 10902 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 529, 557, 1146, 2648, 17214, 469802, 24364817, 32243712 ns/op
# Warmup Iteration   2: n = 29625, mean = 1166 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 512, 548, 561, 561, 603, 1483, 168574, 16973824 ns/op
# Warmup Iteration   3: n = 14937, mean = 551 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 534, 552, 557, 558, 561, 603, 2768, 2924 ns/op
# Warmup Iteration   4: n = 14978, mean = 552 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 535, 552, 558, 560, 562, 605, 2465, 2584 ns/op
# Warmup Iteration   5: n = 15098, mean = 551 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 535, 552, 558, 560, 562, 572, 1548, 2252 ns/op
# Warmup Iteration   6: n = 15101, mean = 551 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 535, 552, 558, 560, 562, 571, 2598, 2604 ns/op
# Warmup Iteration   7: n = 14980, mean = 552 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 535, 552, 558, 560, 562, 612, 2495, 2680 ns/op
# Warmup Iteration   8: n = 15102, mean = 551 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 534, 552, 557, 558, 561, 569, 622, 626 ns/op
# Warmup Iteration   9: n = 15102, mean = 552 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 535, 552, 558, 560, 562, 610, 2352, 2448 ns/op
# Warmup Iteration  10: n = 15100, mean = 551 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 535, 552, 558, 560, 562, 571, 1777, 2920 ns/op
# Warmup Iteration  11: n = 15101, mean = 552 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 535, 552, 558, 560, 562, 614, 2311, 2352 ns/op
# Warmup Iteration  12: n = 15043, mean = 552 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 534, 552, 558, 560, 562, 613, 4157, 5432 ns/op
# Warmup Iteration  13: n = 15073, mean = 551 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 535, 553, 557, 559, 561, 570, 722, 737 ns/op
# Warmup Iteration  14: n = 15103, mean = 551 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 534, 552, 557, 558, 561, 570, 1616, 2592 ns/op
# Warmup Iteration  15: n = 15101, mean = 552 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 535, 552, 559, 560, 562, 574, 4855, 7200 ns/op
# Warmup Iteration  16: n = 15072, mean = 552 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 534, 553, 557, 559, 561, 603, 4099, 5160 ns/op
# Warmup Iteration  17: n = 15025, mean = 552 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 532, 552, 557, 559, 562, 613, 5485, 8384 ns/op
# Warmup Iteration  18: n = 14311, mean = 551 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 532, 552, 557, 559, 562, 576, 2354, 2392 ns/op
# Warmup Iteration  19: n = 15026, mean = 551 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 532, 552, 557, 559, 562, 574, 1502, 2300 ns/op
# Warmup Iteration  20: n = 15076, mean = 551 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 534, 553, 557, 558, 561, 599, 2419, 2464 ns/op
Iteration   1: n = 451426, mean = 552 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 491, 552, 557, 560, 562, 571, 2212, 8560 ns/op
Iteration   2: n = 451782, mean = 552 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 483, 551, 558, 560, 562, 571, 2275, 7776 ns/op
Iteration   3: n = 450815, mean = 551 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 479, 552, 557, 559, 562, 571, 2260, 5448 ns/op
Iteration   4: n = 450732, mean = 551 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 491, 552, 557, 559, 562, 571, 2240, 5008 ns/op
Iteration   5: n = 450805, mean = 551 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 461, 552, 557, 559, 562, 571, 2264, 5352 ns/op
Iteration   6: n = 450800, mean = 551 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 522, 552, 557, 559, 562, 574, 2227, 7544 ns/op
Iteration   7: n = 450713, mean = 551 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 461, 552, 557, 560, 562, 613, 2264, 11152 ns/op
Iteration   8: n = 450797, mean = 551 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 507, 552, 557, 559, 562, 575, 2300, 6496 ns/op
Iteration   9: n = 450788, mean = 551 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 511, 552, 557, 558, 562, 572, 2276, 5616 ns/op
Iteration  10: n = 450807, mean = 551 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 467, 552, 557, 559, 562, 572, 2235, 6680 ns/op
Iteration  11: n = 450811, mean = 551 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 460, 552, 557, 558, 562, 571, 2216, 9392 ns/op
Iteration  12: n = 450761, mean = 551 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 481, 552, 557, 559, 562, 571, 2228, 5704 ns/op
Iteration  13: n = 450765, mean = 551 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 532, 552, 557, 560, 562, 571, 2292, 6496 ns/op
Iteration  14: n = 450739, mean = 551 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 483, 552, 557, 559, 562, 571, 2252, 5576 ns/op
Iteration  15: n = 450823, mean = 551 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 458, 552, 557, 558, 562, 571, 2212, 6472 ns/op
Iteration  16: n = 450747, mean = 551 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 478, 552, 557, 559, 562, 571, 2264, 6016 ns/op
Iteration  17: n = 448534, mean = 555 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 498, 557, 558, 559, 560, 572, 2333, 7168 ns/op
Iteration  18: n = 448354, mean = 554 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 521, 557, 558, 559, 560, 573, 2276, 17536 ns/op
Iteration  19: n = 448517, mean = 554 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 532, 557, 558, 559, 560, 571, 2189, 7464 ns/op
Iteration  20: n = 450800, mean = 551 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 512, 552, 557, 559, 562, 571, 2343, 6384 ns/op


Result "bwireTTF":
  551.658 ±(99.9%) 0.032 ns/op [Average]
  (min, avg, max) = (458.000, 551.658, 17536.000), stdev = 29.253
  CI (99.9%): [551.626, 551.690] (assumes normal distribution)
  Samples, N = 9010316
        mean =    551.658 ±(99.9%) 0.032 ns/op
         min =    458.000 ns/op
  p( 0.0000) =    458.000 ns/op
  p(50.0000) =    553.000 ns/op
  p(90.0000) =    558.000 ns/op
  p(95.0000) =    559.000 ns/op
  p(99.0000) =    562.000 ns/op
  p(99.9000) =    572.000 ns/op
  p(99.9900) =   2260.000 ns/op
  p(99.9990) =   5086.349 ns/op
  p(99.9999) =   7358.019 ns/op
         max =  17536.000 ns/op


# JMH 1.10.3 (released 25 days ago)
# VM version: JDK 1.8.0_45, VM 25.45-b02
# VM invoker: /opt/jdk1.8.0_45/jre/bin/java
# VM options: -verbose:gc -Xmx1g -XX:MaxBCEAEstimateSize=350 -DXX:MaxInlineSize=999 -DlongTest=true -Didea.launcher.port=7533 -Didea.launcher.bin.path=/opt/idea-IU-142.3371.3/bin -Dfile.encoding=UTF-8
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 30 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Sampling time
# Benchmark: net.openhft.chronicle.wire.benchmarks.Main.rwire

# Run progress: 50.00% complete, ETA 00:51:45
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.NoSuchMethodError: net.openhft.chronicle.wire.benchmarks.generated.Main_jmh.rwire()Lnet/openhft/chronicle/bytes/Bytes;
	at net.openhft.chronicle.wire.benchmarks.generated.Main_rwire.rwire_sample_jmhStub(Main_rwire.java:233)
	at net.openhft.chronicle.wire.benchmarks.generated.Main_rwire.rwire_SampleTime(Main_rwire.java:191)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:430)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:412)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)




# JMH 1.10.3 (released 25 days ago)
# VM version: JDK 1.8.0_45, VM 25.45-b02
# VM invoker: /opt/jdk1.8.0_45/jre/bin/java
# VM options: -verbose:gc -Xmx1g -XX:MaxBCEAEstimateSize=350 -DXX:MaxInlineSize=999 -DlongTest=true -Didea.launcher.port=7533 -Didea.launcher.bin.path=/opt/idea-IU-142.3371.3/bin -Dfile.encoding=UTF-8
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 30 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Sampling time
# Benchmark: net.openhft.chronicle.wire.benchmarks.Main.rwire8bit

# Run progress: 60.00% complete, ETA 00:34:31
# Fork: 1 of 1
# Warmup Iteration   1: n = 21038, mean = 14549 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 307, 333, 748, 1216, 20391, 2884973, 27945144, 28114944 ns/op
# Warmup Iteration   2: n = 25060, mean = 337 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 322, 333, 341, 343, 354, 507, 2381, 38336 ns/op
# Warmup Iteration   3: n = 12471, mean = 340 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 326, 338, 345, 346, 361, 377, 2355, 2440 ns/op
# Warmup Iteration   4: n = 12385, mean = 339 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 326, 337, 345, 346, 362, 378, 1731, 2144 ns/op
# Warmup Iteration   5: n = 12480, mean = 339 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 326, 337, 345, 346, 363, 405, 1693, 2108 ns/op
# Warmup Iteration   6: n = 12483, mean = 339 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 326, 338, 345, 346, 361, 396, 421, 421 ns/op
# Warmup Iteration   7: n = 12485, mean = 339 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 326, 337, 345, 346, 362, 405, 475, 477 ns/op
# Warmup Iteration   8: n = 12484, mean = 339 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 311, 338, 345, 346, 362, 378, 1779, 2228 ns/op
# Warmup Iteration   9: n = 12485, mean = 339 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 326, 337, 345, 346, 362, 373, 415, 417 ns/op
# Warmup Iteration  10: n = 12485, mean = 339 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 326, 338, 345, 346, 361, 374, 452, 457 ns/op
# Warmup Iteration  11: n = 12478, mean = 339 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 327, 338, 345, 346, 362, 377, 2108, 2652 ns/op
# Warmup Iteration  12: n = 11331, mean = 339 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 326, 338, 345, 346, 363, 413, 2135, 2392 ns/op
# Warmup Iteration  13: n = 12486, mean = 340 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 327, 337, 345, 346, 362, 378, 2176, 2208 ns/op
# Warmup Iteration  14: n = 12479, mean = 340 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 327, 338, 345, 346, 362, 379, 4266, 4984 ns/op
# Warmup Iteration  15: n = 12482, mean = 339 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 325, 338, 345, 346, 362, 380, 1696, 2100 ns/op
# Warmup Iteration  16: n = 12485, mean = 339 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 327, 337, 345, 346, 361, 384, 2057, 2068 ns/op
# Warmup Iteration  17: n = 12496, mean = 344 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 327, 342, 363, 364, 371, 377, 467, 481 ns/op
# Warmup Iteration  18: n = 12495, mean = 344 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 327, 342, 362, 364, 372, 400, 429, 430 ns/op
# Warmup Iteration  19: n = 12495, mean = 344 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 325, 342, 362, 364, 371, 396, 4512, 5320 ns/op
# Warmup Iteration  20: n = 12395, mean = 344 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 327, 342, 362, 364, 371, 380, 445, 450 ns/op
Iteration   1: n = 374876, mean = 344 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 279, 342, 362, 364, 371, 381, 543, 4952 ns/op
Iteration   2: n = 374784, mean = 344 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 318, 342, 362, 364, 371, 380, 459, 5856 ns/op
Iteration   3: n = 374885, mean = 344 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 302, 342, 362, 364, 371, 381, 540, 4944 ns/op
Iteration   4: n = 374803, mean = 344 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 324, 342, 362, 363, 371, 379, 480, 5896 ns/op
Iteration   5: n = 374801, mean = 344 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 290, 342, 362, 363, 371, 380, 543, 5304 ns/op
Iteration   6: n = 374791, mean = 344 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 311, 342, 362, 363, 371, 377, 493, 5744 ns/op
Iteration   7: n = 374802, mean = 344 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 321, 342, 362, 363, 371, 378, 603, 7040 ns/op
Iteration   8: n = 374811, mean = 344 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 325, 342, 362, 363, 371, 376, 504, 5136 ns/op
Iteration   9: n = 374805, mean = 344 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 304, 342, 362, 363, 371, 376, 475, 3540 ns/op
Iteration  10: n = 374805, mean = 344 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 325, 342, 362, 363, 371, 377, 517, 5512 ns/op
Iteration  11: n = 374901, mean = 344 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 324, 342, 362, 364, 371, 380, 473, 5288 ns/op
Iteration  12: n = 374800, mean = 344 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 317, 342, 362, 363, 371, 375, 1960, 6464 ns/op
Iteration  13: n = 374802, mean = 344 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 325, 342, 362, 363, 371, 376, 1909, 6648 ns/op
Iteration  14: n = 374804, mean = 344 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 294, 342, 362, 363, 371, 377, 484, 5056 ns/op
Iteration  15: n = 374804, mean = 344 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 317, 342, 362, 363, 371, 378, 2004, 5592 ns/op
Iteration  16: n = 374791, mean = 344 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 303, 342, 362, 363, 371, 378, 549, 7128 ns/op
Iteration  17: n = 374798, mean = 344 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 299, 342, 362, 363, 371, 380, 2009, 6344 ns/op
Iteration  18: n = 374889, mean = 344 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 325, 342, 362, 364, 371, 382, 1228, 8224 ns/op
Iteration  19: n = 374879, mean = 344 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 318, 342, 362, 364, 371, 380, 1909, 5360 ns/op
Iteration  20: n = 374886, mean = 344 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 322, 342, 362, 364, 371, 380, 488, 5456 ns/op


Result "rwire8bit":
  344.069 ±(99.9%) 0.029 ns/op [Average]
  (min, avg, max) = (279.000, 344.069, 8224.000), stdev = 24.468
  CI (99.9%): [344.039, 344.098] (assumes normal distribution)
  Samples, N = 7496517
        mean =    344.069 ±(99.9%) 0.029 ns/op
         min =    279.000 ns/op
  p( 0.0000) =    279.000 ns/op
  p(50.0000) =    342.000 ns/op
  p(90.0000) =    362.000 ns/op
  p(95.0000) =    364.000 ns/op
  p(99.0000) =    371.000 ns/op
  p(99.9000) =    379.000 ns/op
  p(99.9900) =    520.696 ns/op
  p(99.9990) =   2648.557 ns/op
  p(99.9999) =   5904.056 ns/op
         max =   8224.000 ns/op


# JMH 1.10.3 (released 25 days ago)
# VM version: JDK 1.8.0_45, VM 25.45-b02
# VM invoker: /opt/jdk1.8.0_45/jre/bin/java
# VM options: -verbose:gc -Xmx1g -XX:MaxBCEAEstimateSize=350 -DXX:MaxInlineSize=999 -DlongTest=true -Didea.launcher.port=7533 -Didea.launcher.bin.path=/opt/idea-IU-142.3371.3/bin -Dfile.encoding=UTF-8
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 30 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Sampling time
# Benchmark: net.openhft.chronicle.wire.benchmarks.Main.rwireUTF

# Run progress: 70.00% complete, ETA 00:26:38
# Fork: 1 of 1
# Warmup Iteration   1: n = 22980, mean = 12460 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 330, 350, 381, 1322, 19942, 1341112, 24603709, 43843584 ns/op
# Warmup Iteration   2: n = 23999, mean = 351 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 331, 350, 356, 370, 383, 492, 683, 2372 ns/op
# Warmup Iteration   3: n = 11865, mean = 353 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 336, 353, 357, 362, 380, 411, 2331, 2340 ns/op
# Warmup Iteration   4: n = 11784, mean = 353 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 336, 353, 358, 369, 380, 389, 2294, 2344 ns/op
# Warmup Iteration   5: n = 11780, mean = 353 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 337, 353, 357, 360, 379, 391, 2080, 2092 ns/op
# Warmup Iteration   6: n = 11879, mean = 352 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 336, 353, 357, 360, 379, 396, 2340, 2784 ns/op
# Warmup Iteration   7: n = 11878, mean = 353 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 336, 353, 357, 361, 379, 414, 2057, 2420 ns/op
# Warmup Iteration   8: n = 11784, mean = 353 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 336, 353, 358, 369, 380, 389, 473, 478 ns/op
# Warmup Iteration   9: n = 11879, mean = 352 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 337, 353, 357, 361, 380, 415, 512, 516 ns/op
# Warmup Iteration  10: n = 11880, mean = 353 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 336, 353, 357, 361, 379, 391, 2168, 2196 ns/op
# Warmup Iteration  11: n = 11876, mean = 352 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 314, 353, 358, 360, 379, 390, 478, 489 ns/op
# Warmup Iteration  12: n = 11879, mean = 352 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 336, 353, 357, 360, 379, 389, 440, 442 ns/op
# Warmup Iteration  13: n = 11880, mean = 353 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 337, 353, 357, 361, 379, 388, 1827, 2148 ns/op
# Warmup Iteration  14: n = 11880, mean = 353 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 334, 353, 358, 368, 379, 388, 2104, 2492 ns/op
# Warmup Iteration  15: n = 11879, mean = 353 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 337, 353, 357, 361, 379, 388, 2445, 2908 ns/op
# Warmup Iteration  16: n = 11231, mean = 352 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 335, 352, 358, 364, 380, 389, 522, 528 ns/op
# Warmup Iteration  17: n = 11869, mean = 351 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 336, 351, 356, 357, 377, 391, 436, 437 ns/op
# Warmup Iteration  18: n = 11869, mean = 351 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 325, 351, 356, 358, 378, 421, 2164, 2192 ns/op
# Warmup Iteration  19: n = 11870, mean = 351 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 334, 351, 356, 357, 375, 388, 1812, 2100 ns/op
# Warmup Iteration  20: n = 11870, mean = 351 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 334, 351, 356, 358, 378, 389, 1780, 2088 ns/op
Iteration   1: n = 356087, mean = 351 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 312, 351, 356, 357, 376, 388, 469, 4992 ns/op
Iteration   2: n = 356070, mean = 351 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 292, 351, 356, 357, 376, 388, 1934, 4824 ns/op
Iteration   3: n = 356084, mean = 351 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 310, 351, 356, 358, 377, 388, 518, 4712 ns/op
Iteration   4: n = 356107, mean = 351 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 317, 351, 356, 358, 377, 389, 573, 6400 ns/op
Iteration   5: n = 356087, mean = 351 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 322, 351, 356, 358, 376, 389, 481, 5376 ns/op
Iteration   6: n = 356057, mean = 351 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 258, 351, 356, 358, 377, 403, 1823, 4680 ns/op
Iteration   7: n = 355689, mean = 351 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 312, 351, 356, 358, 380, 472, 725, 7216 ns/op
Iteration   8: n = 355970, mean = 351 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 305, 351, 356, 358, 377, 411, 1986, 7928 ns/op
Iteration   9: n = 356083, mean = 351 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 294, 351, 356, 358, 376, 389, 491, 5048 ns/op
Iteration  10: n = 356078, mean = 351 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 312, 351, 356, 358, 376, 388, 1793, 7752 ns/op
Iteration  11: n = 356085, mean = 351 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 333, 351, 356, 358, 376, 388, 458, 5920 ns/op
Iteration  12: n = 356125, mean = 351 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 296, 351, 356, 358, 377, 388, 1084, 6488 ns/op
Iteration  13: n = 356066, mean = 351 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 328, 351, 356, 358, 377, 389, 1991, 4952 ns/op
Iteration  14: n = 356028, mean = 351 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 303, 351, 356, 358, 377, 392, 702, 5432 ns/op
Iteration  15: n = 356076, mean = 351 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 323, 351, 356, 357, 377, 389, 1992, 8640 ns/op
Iteration  16: n = 356114, mean = 351 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 327, 351, 356, 358, 377, 388, 496, 6016 ns/op
Iteration  17: n = 356074, mean = 351 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 324, 351, 356, 358, 377, 388, 476, 6664 ns/op
Iteration  18: n = 356082, mean = 351 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 323, 351, 356, 357, 377, 388, 509, 4952 ns/op
Iteration  19: n = 356085, mean = 351 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 317, 351, 356, 358, 376, 388, 1801, 4952 ns/op
Iteration  20: n = 356086, mean = 351 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 316, 351, 356, 358, 376, 388, 517, 5568 ns/op


Result "rwireUTF":
  350.861 ±(99.9%) 0.029 ns/op [Average]
  (min, avg, max) = (258.000, 350.861, 8640.000), stdev = 23.227
  CI (99.9%): [350.832, 350.889] (assumes normal distribution)
  Samples, N = 7121133
        mean =    350.861 ±(99.9%) 0.029 ns/op
         min =    258.000 ns/op
  p( 0.0000) =    258.000 ns/op
  p(50.0000) =    351.000 ns/op
  p(90.0000) =    356.000 ns/op
  p(95.0000) =    358.000 ns/op
  p(99.0000) =    377.000 ns/op
  p(99.9000) =    391.000 ns/op
  p(99.9900) =    606.000 ns/op
  p(99.9990) =   2935.093 ns/op
  p(99.9999) =   6596.371 ns/op
         max =   8640.000 ns/op


# JMH 1.10.3 (released 25 days ago)
# VM version: JDK 1.8.0_45, VM 25.45-b02
# VM invoker: /opt/jdk1.8.0_45/jre/bin/java
# VM options: -verbose:gc -Xmx1g -XX:MaxBCEAEstimateSize=350 -DXX:MaxInlineSize=999 -DlongTest=true -Didea.launcher.port=7533 -Didea.launcher.bin.path=/opt/idea-IU-142.3371.3/bin -Dfile.encoding=UTF-8
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 30 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Sampling time
# Benchmark: net.openhft.chronicle.wire.benchmarks.Main.twire8bit

# Run progress: 80.00% complete, ETA 00:18:07
# Fork: 1 of 1
# Warmup Iteration   1: n = 21472, mean = 33905 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 2656, 4312, 6984, 17472, 58752, 14775042, 36826081, 63307776 ns/op
# Warmup Iteration   2: n = 22627, mean = 4780 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 2344, 2436, 2452, 2468, 2980, 6472, 17750962, 28016640 ns/op
# Warmup Iteration   3: n = 13279, mean = 2436 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 2364, 2436, 2448, 2452, 2460, 3924, 5067, 5280 ns/op
# Warmup Iteration   4: n = 12952, mean = 2432 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 2352, 2436, 2444, 2452, 2472, 2800, 6775, 7696 ns/op
# Warmup Iteration   5: n = 13305, mean = 2438 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 2364, 2436, 2444, 2452, 2464, 2674, 26924, 36160 ns/op
# Warmup Iteration   6: n = 13203, mean = 2435 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 2360, 2436, 2444, 2452, 2460, 2500, 4300, 4328 ns/op
# Warmup Iteration   7: n = 13310, mean = 2434 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 2364, 2436, 2448, 2452, 2464, 2645, 4982, 5152 ns/op
# Warmup Iteration   8: n = 13310, mean = 2438 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 2364, 2436, 2444, 2452, 2460, 2611, 24585, 33024 ns/op
# Warmup Iteration   9: n = 13311, mean = 2434 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 2364, 2436, 2444, 2452, 2460, 2516, 4357, 4368 ns/op
# Warmup Iteration  10: n = 13309, mean = 2435 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 2364, 2436, 2444, 2452, 2460, 2586, 4568, 4632 ns/op
# Warmup Iteration  11: n = 13312, mean = 2434 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 2364, 2436, 2444, 2452, 2464, 2684, 5164, 5416 ns/op
# Warmup Iteration  12: n = 13200, mean = 2436 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 2364, 2436, 2444, 2452, 2460, 2583, 6620, 7560 ns/op
# Warmup Iteration  13: n = 13314, mean = 2434 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 2360, 2436, 2444, 2452, 2460, 2583, 7050, 8288 ns/op
# Warmup Iteration  14: n = 13308, mean = 2435 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 2360, 2436, 2444, 2452, 2460, 2594, 4905, 5056 ns/op
# Warmup Iteration  15: n = 13308, mean = 2437 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 2364, 2436, 2444, 2452, 2460, 2575, 11282, 12224 ns/op
# Warmup Iteration  16: n = 12011, mean = 2436 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 2360, 2436, 2444, 2452, 2464, 2759, 5380, 5568 ns/op
# Warmup Iteration  17: n = 13304, mean = 2437 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 2360, 2436, 2444, 2452, 2460, 2571, 8025, 9712 ns/op
# Warmup Iteration  18: n = 13304, mean = 2437 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 2368, 2436, 2444, 2452, 2460, 2630, 4822, 4904 ns/op
# Warmup Iteration  19: n = 13305, mean = 2438 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 2368, 2436, 2444, 2452, 2460, 2616, 5033, 5096 ns/op
# Warmup Iteration  20: n = 13300, mean = 2438 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 2372, 2436, 2444, 2452, 2460, 2595, 10590, 10944 ns/op
Iteration   1: n = 399068, mean = 2438 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 2036, 2436, 2448, 2452, 2460, 2576, 4760, 11024 ns/op
Iteration   2: n = 399125, mean = 2437 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 2360, 2436, 2444, 2452, 2460, 2576, 4745, 16768 ns/op
Iteration   3: n = 399137, mean = 2436 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 2056, 2436, 2444, 2448, 2460, 2592, 4850, 9504 ns/op
Iteration   4: n = 399089, mean = 2438 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 2348, 2436, 2448, 2452, 2460, 2576, 4897, 10768 ns/op
Iteration   5: n = 399122, mean = 2437 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 1938, 2436, 2444, 2452, 2460, 2612, 5065, 10608 ns/op
Iteration   6: n = 399117, mean = 2437 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 2068, 2436, 2448, 2452, 2460, 2612, 4697, 9312 ns/op
Iteration   7: n = 399132, mean = 2437 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 2064, 2436, 2444, 2452, 2460, 2592, 4625, 9216 ns/op
Iteration   8: n = 399112, mean = 2437 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 2204, 2436, 2444, 2452, 2460, 2588, 4649, 14832 ns/op
Iteration   9: n = 399123, mean = 2438 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 2016, 2436, 2444, 2452, 2460, 2584, 4656, 14016 ns/op
Iteration  10: n = 399159, mean = 2437 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 2172, 2436, 2448, 2448, 2460, 2584, 4697, 10688 ns/op
Iteration  11: n = 399137, mean = 2437 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 2044, 2436, 2444, 2448, 2460, 2576, 4648, 9328 ns/op
Iteration  12: n = 399114, mean = 2438 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 2312, 2436, 2448, 2452, 2460, 2588, 4793, 9728 ns/op
Iteration  13: n = 399123, mean = 2437 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 2360, 2436, 2444, 2452, 2460, 2588, 4681, 9664 ns/op
Iteration  14: n = 399134, mean = 2438 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 2020, 2436, 2444, 2452, 2460, 2583, 4769, 16736 ns/op
Iteration  15: n = 399145, mean = 2437 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 2360, 2436, 2444, 2448, 2460, 2580, 4712, 10352 ns/op
Iteration  16: n = 399145, mean = 2437 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 2104, 2436, 2444, 2448, 2460, 2592, 4744, 11136 ns/op
Iteration  17: n = 399137, mean = 2437 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 2184, 2436, 2444, 2452, 2460, 2580, 4641, 16112 ns/op
Iteration  18: n = 399117, mean = 2438 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 2216, 2436, 2444, 2452, 2460, 2596, 4752, 15888 ns/op
Iteration  19: n = 399125, mean = 2438 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 2164, 2436, 2444, 2452, 2460, 2603, 4665, 10064 ns/op
Iteration  20: n = 399020, mean = 2449 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 2248, 2448, 2460, 2460, 2472, 2584, 4716, 9824 ns/op


Result "twire8bit":
  2437.975 ±(99.9%) 0.077 ns/op [Average]
  (min, avg, max) = (1938.000, 2437.975, 16768.000), stdev = 65.925
  CI (99.9%): [2437.898, 2438.052] (assumes normal distribution)
  Samples, N = 7982381
        mean =   2437.975 ±(99.9%) 0.077 ns/op
         min =   1938.000 ns/op
  p( 0.0000) =   1938.000 ns/op
  p(50.0000) =   2436.000 ns/op
  p(90.0000) =   2448.000 ns/op
  p(95.0000) =   2452.000 ns/op
  p(99.0000) =   2460.000 ns/op
  p(99.9000) =   2588.000 ns/op
  p(99.9900) =   4704.000 ns/op
  p(99.9990) =   8578.819 ns/op
  p(99.9999) =  11153.195 ns/op
         max =  16768.000 ns/op


# JMH 1.10.3 (released 25 days ago)
# VM version: JDK 1.8.0_45, VM 25.45-b02
# VM invoker: /opt/jdk1.8.0_45/jre/bin/java
# VM options: -verbose:gc -Xmx1g -XX:MaxBCEAEstimateSize=350 -DXX:MaxInlineSize=999 -DlongTest=true -Didea.launcher.port=7533 -Didea.launcher.bin.path=/opt/idea-IU-142.3371.3/bin -Dfile.encoding=UTF-8
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 30 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Sampling time
# Benchmark: net.openhft.chronicle.wire.benchmarks.Main.twireUTF

# Run progress: 90.00% complete, ETA 00:09:12
# Fork: 1 of 1
# Warmup Iteration   1: n = 19952, mean = 37398 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 2608, 4152, 7464, 9312, 55582, 10432250, 53573098, 59965440 ns/op
# Warmup Iteration   2: n = 21961, mean = 3332 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 2568, 2592, 2668, 2692, 2980, 5009, 5088250, 8069120 ns/op
# Warmup Iteration   3: n = 11861, mean = 2633 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 2560, 2644, 2660, 2664, 2680, 3102, 6806, 7248 ns/op
# Warmup Iteration   4: n = 11833, mean = 2599 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 2572, 2592, 2600, 2604, 2612, 3075, 35859, 42112 ns/op
# Warmup Iteration   5: n = 12166, mean = 2586 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 2568, 2584, 2592, 2596, 2600, 4147, 4897, 4904 ns/op
# Warmup Iteration   6: n = 12172, mean = 2586 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 2568, 2584, 2592, 2596, 2600, 2839, 6689, 7224 ns/op
# Warmup Iteration   7: n = 12174, mean = 2586 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 2552, 2584, 2592, 2596, 2600, 3036, 8601, 9520 ns/op
# Warmup Iteration   8: n = 12075, mean = 2586 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 2544, 2584, 2592, 2596, 2600, 4264, 5498, 5656 ns/op
# Warmup Iteration   9: n = 12167, mean = 2586 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 2568, 2584, 2592, 2596, 2600, 3184, 9595, 10096 ns/op
# Warmup Iteration  10: n = 12168, mean = 2585 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 2568, 2584, 2592, 2596, 2600, 2813, 7337, 7920 ns/op
# Warmup Iteration  11: n = 12170, mean = 2585 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 2568, 2584, 2592, 2596, 2596, 2741, 4777, 4800 ns/op
# Warmup Iteration  12: n = 12175, mean = 2586 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 2568, 2584, 2592, 2596, 2596, 2851, 7190, 7888 ns/op
# Warmup Iteration  13: n = 12165, mean = 2585 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 2556, 2584, 2596, 2596, 2600, 2904, 6285, 6720 ns/op
# Warmup Iteration  14: n = 12173, mean = 2592 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 2568, 2592, 2596, 2596, 2648, 4436, 7714, 7808 ns/op
# Warmup Iteration  15: n = 12070, mean = 2586 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 2568, 2584, 2592, 2596, 2600, 2985, 7903, 8640 ns/op
# Warmup Iteration  16: n = 12169, mean = 2585 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 2484, 2584, 2592, 2596, 2600, 2767, 7853, 7968 ns/op
# Warmup Iteration  17: n = 12136, mean = 2600 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 2544, 2596, 2612, 2616, 2620, 2806, 4773, 4776 ns/op
# Warmup Iteration  18: n = 11006, mean = 2601 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 2572, 2596, 2612, 2616, 2620, 2912, 7551, 7560 ns/op
# Warmup Iteration  19: n = 12136, mean = 2600 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 2568, 2596, 2608, 2616, 2620, 2788, 7163, 7808 ns/op
# Warmup Iteration  20: n = 12130, mean = 2602 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 2568, 2600, 2612, 2616, 2620, 2733, 4890, 4936 ns/op
Iteration   1: n = 364043, mean = 2600 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 2192, 2596, 2612, 2616, 2620, 2824, 4904, 10448 ns/op
Iteration   2: n = 364053, mean = 2600 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 2304, 2596, 2612, 2616, 2620, 2784, 4968, 15984 ns/op
Iteration   3: n = 364049, mean = 2601 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 2536, 2596, 2612, 2616, 2620, 2828, 4992, 12368 ns/op
Iteration   4: n = 364025, mean = 2599 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 2520, 2596, 2608, 2612, 2620, 2796, 4954, 8640 ns/op
Iteration   5: n = 364024, mean = 2601 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 2496, 2600, 2612, 2616, 2620, 2824, 4893, 9760 ns/op
Iteration   6: n = 364045, mean = 2600 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 2560, 2596, 2612, 2616, 2620, 2812, 5024, 7960 ns/op
Iteration   7: n = 364056, mean = 2600 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 2532, 2596, 2612, 2616, 2620, 2812, 4872, 8928 ns/op
Iteration   8: n = 364054, mean = 2600 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 2404, 2596, 2612, 2616, 2620, 2804, 4954, 10032 ns/op
Iteration   9: n = 364053, mean = 2600 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 2472, 2596, 2612, 2616, 2620, 2828, 4981, 11184 ns/op
Iteration  10: n = 364055, mean = 2599 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 2568, 2596, 2612, 2616, 2620, 2796, 4832, 8992 ns/op
Iteration  11: n = 364056, mean = 2600 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 2408, 2596, 2612, 2616, 2620, 2808, 4922, 9264 ns/op
Iteration  12: n = 364000, mean = 2600 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 2504, 2596, 2612, 2616, 2620, 2808, 4877, 10256 ns/op
Iteration  13: n = 364054, mean = 2600 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 2196, 2596, 2612, 2616, 2620, 2788, 4893, 9680 ns/op
Iteration  14: n = 364052, mean = 2600 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 2524, 2596, 2612, 2616, 2620, 2796, 5088, 9168 ns/op
Iteration  15: n = 364054, mean = 2600 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 2552, 2596, 2612, 2616, 2620, 2792, 4989, 11440 ns/op
Iteration  16: n = 364044, mean = 2600 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 2184, 2596, 2612, 2616, 2620, 2848, 4973, 12704 ns/op
Iteration  17: n = 364037, mean = 2599 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 2320, 2596, 2608, 2616, 2620, 2780, 4882, 9248 ns/op
Iteration  18: n = 363995, mean = 2601 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 2564, 2596, 2612, 2616, 2620, 2832, 5205, 10960 ns/op
Iteration  19: n = 364017, mean = 2599 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 2484, 2596, 2612, 2616, 2620, 2812, 5030, 17248 ns/op
Iteration  20: n = 364035, mean = 2600 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 2124, 2596, 2612, 2616, 2620, 2796, 4922, 9408 ns/op


Result "twireUTF":
  2600.033 ±(99.9%) 0.082 ns/op [Average]
  (min, avg, max) = (2124.000, 2600.033, 17248.000), stdev = 67.437
  CI (99.9%): [2599.950, 2600.115] (assumes normal distribution)
  Samples, N = 7280801
        mean =   2600.033 ±(99.9%) 0.082 ns/op
         min =   2124.000 ns/op
  p( 0.0000) =   2124.000 ns/op
  p(50.0000) =   2596.000 ns/op
  p(90.0000) =   2612.000 ns/op
  p(95.0000) =   2616.000 ns/op
  p(99.0000) =   2620.000 ns/op
  p(99.9000) =   2808.000 ns/op
  p(99.9900) =   4936.000 ns/op
  p(99.9990) =   8624.000 ns/op
  p(99.9999) =  11368.115 ns/op
         max =  17248.000 ns/op


# Run complete. Total time: 01:33:12

Benchmark         Mode      Cnt     Score   Error  Units
Main.bwireFFF   sample  7061596  1410.683 ± 0.063  ns/op
Main.bwireFTF   sample  8369517   588.531 ± 0.034  ns/op
Main.bwireFTT   sample  9148551   541.996 ± 0.031  ns/op
Main.bwireTFF   sample  7162519  1335.590 ± 0.058  ns/op
Main.bwireTTF   sample  9010316   551.658 ± 0.032  ns/op
Main.rwire8bit  sample  7496517   344.069 ± 0.029  ns/op
Main.rwireUTF   sample  7121133   350.861 ± 0.029  ns/op
Main.twire8bit  sample  7982381  2437.975 ± 0.077  ns/op
Main.twireUTF   sample  7280801  2600.033 ± 0.082  ns/op
